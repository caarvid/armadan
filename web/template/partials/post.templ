package partials

import "time"
import "fmt"
import "github.com/caarvid/armadan/internal/utils/markdown"
import "github.com/caarvid/armadan/internal/armadan"

templ PostCard(post armadan.Post) {
	<div class="rounded-l border bg-card text-card-foreground shadow-sm p-3 border-border/40">
		<h3 class="font-semibold leading-none tracking-tight mb-2 text-2xl">{ post.Title }</h3>
		<div class="mb-3 flex flex-col gap-4">
			@templ.Raw(string(markdown.MdToHtml([]byte(post.Body))))
		</div>
		<div class="flex justify-between opacity-50">
			<div>{ post.Author }</div>
			<div>{ post.CreatedAt.Format("2006-01-02") }</div>
		</div>
	</div>
}

templ PostList(posts []armadan.Post) {
	@Table("post-list") {
		<thead class="thead">
			<tr class="tr">
				<th class="th w-1/3">Titel</th>
				<th class="th w-1/5">Inlagd av</th>
				<th class="th w-1/5">Datum</th>
				<th class="th"></th>
			</tr>
		</thead>
		<tbody class="tbody">
			for _, post := range posts {
				@Post(post)
			}
		</tbody>
	}
}

templ Post(post armadan.Post) {
	<tr class="tr group">
		<td class="td">{ post.Title }</td>
		<td class="td">{ post.Author }</td>
		<td class="td">{ post.CreatedAt.Format(time.DateTime) }</td>
		<td class="td">
			<div class="flex gap-3 ml-auto justify-end">
				<button
					class="btn-link p-0 h-auto text-primary/60 hover:text-primary"
					hx-get={ fmt.Sprintf("/admin/posts/%s/edit", post.ID) }
					hx-target="body"
					hx-swap="beforeend"
				>
					Ändra	
				</button>
				<button
					class="btn-link p-0 h-auto text-primary/60 hover:text-destructive"
					hx-delete={ fmt.Sprintf("/api/posts/%s", post.ID) }
					hx-confirm={ fmt.Sprintf("Ta bort '%s'?", post.Title) }
					hx-target="closest .group"
					hx-swap="delete"
				>
					Ta bort	
				</button>
			</div>
		</td>
	</tr>
}

templ EditPost(post armadan.Post) {
	@Modal("Uppdatera inlägg", true) {
		<form
			id="edit-post-form"
			class="flex flex-col gap-3 flex-1 mb-0"
			hx-put={ fmt.Sprintf("/api/posts/%s", post.ID) }
			hx-target="#post-list"
			hx-swap="outerHTML"
			hx-ext="json-form"
		>
			<input required type="text" class="input" name="title" value={ post.Title }/>
			<div class="flex justify-between">
				<div class="flex gap-1">
					<span class="p-1 hover:bg-slate-200/60 cursor-pointer" data-surround="**">
						@BoldIcon()
					</span>
					<span class="p-1 hover:bg-slate-200/60 cursor-pointer" data-surround="_">
						@ItalicIcon()
					</span>
					<span class="p-1 hover:bg-slate-200/60 cursor-pointer" data-surround="~~">
						@StrikeTextIcon()
					</span>
					<script>
						any('div > span', me()).on('click', (ev) => { 
							textAction(me("#post-body"), surround(me(ev).attribute("data-surround")))
						});	
					</script>
				</div>
				<div class="flex items-center space-x-2">
					<button
						id="preview"
						class="peer switch switch-target"
						hx-post="/api/posts/preview"
						hx-trigger="preview"
						hx-select="unset"
						hx-target="#preview-body"
						hx-swap="innerHTML"
						type="button"
					>
						<span class="switch-target switch-thumb"></span>
					</button>
					<script>
						me('-').on('click', (ev) => {
							if (me('span', me(ev)).setAttr("data-checked", (v) => v !== "true") === "true") {
								me(ev).send("preview");	
								me("#post-body").hide();
								me("#preview-body").show();
							} else {
								me("#post-body").show();
								me("#preview-body").hide();
							}
						});
					</script>
					<label for="preview" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">Förhandsvisa</label>
				</div>
			</div>
			<textarea
				id="post-body"
				required
				name="body"
				rows="12"
				class="flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-xs placeholder:text-muted-foreground focus-visible:outline-hidden focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50"
			>{ post.Body }</textarea>
			<script>
				me("-").on('input', (ev) => { me("#preview").disabled = me(ev).value.length === 0; })
			</script>
			<div id="preview-body" style="display: none" class="flex flex-col gap-4 mb-4"></div>
			<input type="text" required class="input" name="author" value={ post.Author }/>
		</form>
		<span class="flex justify-end gap-3">
			<button
				form="edit-post-form"
				class="btn-default"
				type="submit"
			>Spara</button>
		</span>
		<script>
			me("#edit-post-form").onHtmxSuccess(() => me("#modal").send("closeModal"));
		</script>
	}
}
