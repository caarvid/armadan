package views

import "fmt"
import "github.com/caarvid/armadan/internal/schema"
import "github.com/caarvid/armadan/web/template/partials"
import "github.com/caarvid/armadan/internal/dto"

templ CourseCard(course schema.GetCoursesRow) {
	<h3 class="font-semibold leading-none tracking-tight text-xl">{ course.Name }</h3>
	<span class="flex text-xl gap-3 items-center justify-center">
		<span
			class="cursor-pointer hover:text-card-foreground/50"
			hx-get={ fmt.Sprintf("/admin/courses/edit/%s", course.ID.String()) }
			hx-target="closest div"
		>
			@partials.EditIcon()
		</span>
		<span
			class="cursor-pointer hover:text-destructive"
			hx-swap="outerHTML"
			hx-delete={ fmt.Sprintf("/api/courses/%s", course.ID.String()) }
			hx-confirm={ fmt.Sprintf("Are you sure you want to remove '%s'?", course.Name) }
			hx-target="closest div"
		>
			@partials.DeleteIcon()
		</span>
	</span>
}

templ EmptyTeeForm() {
	<div class="grid grid-cols-[1.5fr_0.5fr_0.5fr_0.1fr] gap-2">
		<input type="text" class="input" name="tees.0.name" placeholder="name" required autocomplete="off"/>
		<input type="number" class="input" name="tees.0.slope" placeholder="Slope" required/>
		<input class="input" type="number" name="tees.0.cr" placeholder="CR" step="0.1" required/>
		<span
			hx-get="/admin/courses/tee/remove"
			hx-target="closest div"
			hx-swap="outerHTML"
			class="cursor-pointer flex items-center justify-center hover:text-destructive text-lg"
		>
			@partials.DeleteIcon()
		</span>
	</div>
}

templ TeeForm(t dto.Tee) {
	<div class="grid grid-cols-[1.5fr_0.5fr_0.5fr_0.1fr] gap-2">
		<input type="hidden" name="tees.0.id" value={ t.Id.String() }/>
		<input type="text" class="input" name="tees.0.name" placeholder="name" required autocomplete="off" value={ t.Name }/>
		<input type="number" class="input" name="tees.0.slope" placeholder="Slope" required value={ fmt.Sprintf("%d", t.Slope) }/>
		<input class="input" type="number" name="tees.0.cr" placeholder="CR" step="0.1" required value={ fmt.Sprintf("%.1f", t.Cr) }/>
		<span
			hx-delete={ fmt.Sprintf("/api/courses/tee/%s", t.Id) }
			hx-target="closest div"
			hx-params="none"
			hx-swap="outerHTML"
			class="cursor-pointer flex items-center justify-center hover:text-destructive text-lg"
			hx-confirm={ fmt.Sprintf("Är du säker på att du vill ta bort '%s'?", t.Name) }
		>
			@partials.DeleteIcon()
		</span>
	</div>
}

templ EditCourse(c schema.GetCourseRow) {
	<form
		hx-put={ fmt.Sprintf("/api/courses/%s", c.ID) }
		class="flex flex-col gap-4 flex-1 mb-0"
		hx-target="closest div"
		hx-ext="json-form"
	>
		<input type="text" name="name" class="input" value={ c.Name } placeholder="Namn" required autocomplete="off"/>
		<fieldset
			class="flex p-4 border-2 flex-col gap-2 relative"
			id="tees"
			_="
					on mutation of childList
						set divs to <div/> in me
					 	for d in divs index i
							set inputs to <input/> in d
							for inp in inputs
								js(inp, i)
									inp.name=inp.name.replace(/\\d+/, i)
								end
							end
						end
				"
		>
			<legend>Tees</legend>
			<button
				type="button"
				class="bg-white btn-ghost absolute -top-[1.9rem] right-4 flex"
				hx-get="/admin/courses/tee/new"
				hx-target="#tees"
				hx-swap="beforeend"
				hx-select="unset"
			>
				@partials.PlusIcon()
			</button>
			for _, t := range *c.Tees {
				@TeeForm(t)
			}
		</fieldset>
		<fieldset class="flex p-4 border-2">
			<legend>Hål</legend>
			<div class="grid grid-cols-2 flex-1 gap-2">
				for i := range 2 {
					<div class="flex flex-col gap-3">
						for h := range 9 {
							<input type="hidden" name={ fmt.Sprintf("holes.%d.id", (i*9)+h) } value={ (*c.Holes)[(i*9)+h].Id.String() }/>
							<input type="hidden" data-type="number" name={ fmt.Sprintf("holes.%d.nr", (i*9)+h) } value={ fmt.Sprintf("%d", (*c.Holes)[(i*9)+h].Nr) }/>
							<div class="grid grid-cols-[0.2fr_1fr_1fr] gap-3">
								<div class="flex items-center justify-center">{ fmt.Sprintf("%d", ( i * 9 ) + h + 1 ) }</div>
								<input
									type="number"
									class="input"
									name={ fmt.Sprintf("holes.%d.par", (i*9)+h) }
									placeholder="Par"
									min="3"
									max="5"
									step="1"
									required
									value={ fmt.Sprintf("%d", (*c.Holes)[(i*9)+h].Par) }
								/>
								<input
									value={ fmt.Sprintf("%d", (*c.Holes)[(i*9)+h].Index) }
									type="number"
									class="input"
									name={ fmt.Sprintf("holes.%d.index", (i*9)+h) }
									placeholder="Index"
									min="1"
									max="18"
									step="1"
									required
								/>
							</div>
						}
					</div>
				}
			</div>
		</fieldset>
		<span class="flex justify-end gap-2">
			<button
				class="btn-secondary"
				type="button"
				hx-get={ fmt.Sprintf("/admin/courses/edit/%s/cancel", c.ID) }
			>Avbryt</button>
			<button class="btn-default" type="submit">Spara</button>
		</span>
	</form>
}

templ CreateCourse() {
	@AdminLayout() {
		@adminHeader() {
			<h3 class="font-semibold leading-none tracking-tight text-2xl">Ny bana</h3>
		}
		<form
			hx-post="/api/courses"
			hx-target="#admin-content"
			hx-swap="outerHTML"
			hx-select="#admin-content"
			hx-ext="json-form"
			class="pb-4 flex flex-col gap-4"
		>
			<input type="text" name="name" class="input" placeholder="Namn" required autocomplete="off"/>
			<fieldset
				class="flex p-4 border-2 flex-col gap-2 relative"
				id="tees"
				_="
					on mutation of childList
						set divs to <div/> in me
					 	for d in divs index i
							set inputs to <input/> in d
							for inp in inputs
								js(inp, i)
									inp.name=inp.name.replace(/\\d+/, i)
								end
							end
						end
				"
			>
				<legend>Tees</legend>
				<button
					type="button"
					class="bg-white btn-ghost absolute -top-[1.9rem] right-4 flex"
					hx-get="/admin/courses/tee/new"
					hx-target="#tees"
					hx-swap="beforeend"
					hx-select="unset"
				>
					@partials.PlusIcon()
				</button>
			</fieldset>
			<fieldset class="flex p-4 border-2">
				<legend>Hål</legend>
				<div class="grid grid-cols-2 flex-1 gap-2">
					for i := range 2 {
						<div class="flex flex-col gap-3">
							for h := range 9 {
								<input type="hidden" data-type="number" name={ fmt.Sprintf("holes.%d.nr", (i*9)+h) } value={ fmt.Sprintf("%d", (i*9)+h+1) }/>
								<div class="grid grid-cols-[0.2fr_1fr_1fr] gap-3">
									<div class="flex items-center justify-center">{ fmt.Sprintf("%d", ( i * 9 ) + h + 1 ) }</div>
									<input type="number" class="input" name={ fmt.Sprintf("holes.%d.par", (i*9)+h) } placeholder="Par" min="3" max="5" step="1" required/>
									<input type="number" class="input" name={ fmt.Sprintf("holes.%d.index", (i*9)+h) } placeholder="Index" min="1" max="18" step="1" required/>
								</div>
							}
						</div>
					}
				</div>
			</fieldset>
			<span class="flex justify-end gap-2">
				<button
					class="btn-secondary"
					type="button"
					hx-get="/admin/courses"
				>Avbryt</button>
				<button class="btn-default" type="submit">Spara</button>
			</span>
		</form>
	}
}

templ ManageCourses(courses []schema.GetCoursesRow) {
	@AdminLayout() {
		@adminHeader() {
			<h3 class="font-semibold leading-none tracking-tight text-2xl">Banor</h3>
			<button
				class="btn-default"
				hx-get="/admin/courses/new"
				hx-swap="outerHTML"
				hx-select="#admin-content"
				hx-target="#admin-content"
			>Ny bana</button>
		}
		<div class="flex flex-col flex-1 gap-2">
			for _, course := range courses {
				<div
					class="rounded-l border bg-card text-card-foreground shadow p-3 flex items-center justify-between last:mb-4"
					hx-target="closest div"
				>
					@CourseCard(course)
				</div>
			}
		</div>
	}
}
